# Makefile.local for orangutan.perimeterinstitute.ca
# (a vintage-2017 ubuntu machine)

# Directory where executables will be installed
BINDIR=$(HOME)/bin

# Read-only location of python header files
PYTHON_INCDIR=/usr/include/python2.7

# Hint for NUMPY_INCDIR: import numpy; numpy.get_include()
# On orangutan, I use two NUMPY_INCDIRs, to allow for the possibility that there may or may not be
# a pip-installed version of numpy in $HOME/.local.

NUMPY_INCDIR1=$(HOME)/.local/lib/python2.7/site-packages/numpy/core/include
NUMPY_INCDIR2=/usr/lib/python2.7/dist-packages/numpy/core/include

#
# C++ command line
# Don't forget -std=c++11 -pthread -fPIC
# Don't forget -march=native, since __AVX2__ is tested
#
CPP=g++ -std=c++11 -pthread -fPIC -Wall -O3 -march=native -ffast-math -funroll-loops  -I. -I$(HOME)/include -I/usr/include/jsoncpp -I$(PYTHON_INCDIR) -I$(NUMPY_INCDIR1) -I$(NUMPY_INCDIR2)

# Any C++ flags which should only be specified when linking 
# Don't forget to put -L. and -L$(LIBDIR) on the command line (in this order)
# Don't forget to add . and $(LIBDIR) in your LD_LIBRARY_PATH environment variable (in this order)
CPP_LFLAGS=-L. -L$(HOME)/lib


# We use the C (not C++) compiler only once: to compile civetweb/civetweb.o.
CC=gcc -pthread -fPIC -Wall -O3 -march=native -ffast-math -funroll-loops -I. -I/usr/include/jsoncpp -I$(HOME)/include

